@:keep @:directlyUsed @:used
private class haxe.ds._Map.Map_Impl_ {

	public static inline function set(this1:haxe.IMap<haxe.ds.Map.K, haxe.ds.Map.V>, key:haxe.ds.Map.K, value:haxe.ds.Map.V) {
		this1.set(key, value);
	}

	@:arrayAccess
	public static inline function get(this1:haxe.IMap<haxe.ds.Map.K, haxe.ds.Map.V>, key:haxe.ds.Map.K) {
		return this1.get(key);
	}

	public static inline function exists(this1:haxe.IMap<haxe.ds.Map.K, haxe.ds.Map.V>, key:haxe.ds.Map.K) {
		return this1.exists(key);
	}

	public static inline function keys(this1:haxe.IMap<haxe.ds.Map.K, haxe.ds.Map.V>) {
		return this1.keys();
	}

	@:to
	static inline function toStringMap<K:String, V>(t:haxe.IMap<toStringMap.K, toStringMap.V>) {
		return new haxe.ds.StringMap();
	}

	@:to
	static inline function toObjectMap<K:{ }, V>(t:haxe.IMap<toObjectMap.K, toObjectMap.V>) {
		return new haxe.ds.ObjectMap();
	}
}