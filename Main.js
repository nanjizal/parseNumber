// Generated by Haxe 4.3.0-rc.1+5f599ba
(function ($global) { "use strict";
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var htmlHelper_tools_DivertTrace = function(left,d) {
	if(left == null) {
		left = 610;
	}
	this.textStyle1 = "<span style=\"font-size:14px; color:Grey\">";
	this.textStyle0 = "<span style=\"font-size:12px; color:Silver\">";
	this.traceString = "";
	this.divertTrace(left,d);
};
htmlHelper_tools_DivertTrace.__name__ = true;
htmlHelper_tools_DivertTrace.prototype = {
	divertTrace: function(left,d) {
		if(d == null) {
			var doc = window.document;
			this.traceDiv = doc.createElement("div");
			doc.body.appendChild(this.traceDiv);
			var dom = this.traceDiv;
			var style = dom.style;
			style.position = "absolute";
			style.top = "0px";
			style.left = (left == null ? "null" : "" + left) + "px";
			style.height = "500px";
			style.width = "500px";
			style.zIndex = "99";
			style.overflow = "auto";
		} else {
			this.traceDiv = d;
		}
		haxe_Log.trace = $bind(this,this.myTrace);
	}
	,myTrace: function(v,inf) {
		if(Std.string(v) == "") {
			return;
		}
		this.traceString += this.textStyle0 + inf.className + "." + inf.methodName + " ( " + (inf.lineNumber == null ? "null" : "" + inf.lineNumber) + " )" + "</span>" + "<br> - " + this.textStyle1 + Std.string(v) + "</span>" + "<br>";
		this.traceDiv.innerHTML = this.traceString;
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
function parseNumber_Main_main() {
	haxe_Log.trace("Testing parseValues",{ fileName : "src/parseNumber/Main.hx", lineNumber : 5, className : "parseNumber._Main.Main_Fields_", methodName : "main"});
	new htmlHelper_tools_DivertTrace();
	var testValues = ["-100.000","test","0xFF0000","  01","  2.2  ","1.2.3","800-83b9"];
	var out = [];
	var _g = [];
	var _g1 = 0;
	var _g2 = testValues.length;
	while(_g1 < _g2) {
		var i = _g1++;
		var this1 = parseNumber_ParseNumber_parse(testValues[i]);
		_g.push(this1);
	}
	var parseValues = _g;
	var _g = 0;
	while(_g < parseValues.length) {
		var value = parseValues[_g];
		++_g;
		haxe_Log.trace(value,{ fileName : "src/parseNumber/Main.hx", lineNumber : 17, className : "parseNumber._Main.Main_Fields_", methodName : "main"});
	}
	var _g = 0;
	while(_g < testValues.length) {
		var value = testValues[_g];
		++_g;
		haxe_Log.trace("testing \"" + value + "\"",{ fileName : "src/parseNumber/Main.hx", lineNumber : 21, className : "parseNumber._Main.Main_Fields_", methodName : "main"});
		parseNumber_ParseNumber_parseTest(value);
	}
}
function parseNumber_ParseNumber_parseTest(no) {
	haxe_Log.trace("result '" + parseNumber_ParseNumber_parse(no) + "'",{ fileName : "src/parseNumber/ParseNumber.hx", lineNumber : 28, className : "parseNumber._ParseNumber.ParseNumber_Fields_", methodName : "parseTest"});
}
function parseNumber_ParseNumber_parse(no) {
	var str = new parseNumber_StringCodeIterator(no);
	var temp = "";
	var count = 0;
	var isNumber = true;
	var dotCount = 0;
	var hasX = false;
	str.c = str.str.charCodeAt(str.pos++);
	_hx_loop1: while(str.pos < str.length + 1) {
		if(count == 0) {
			if(str.c == 32) {
				count = 0;
				str.c = str.str.charCodeAt(str.pos++);
				continue;
			} else if(str.c == 45) {
				var c = str.c;
				str.b.b += String.fromCodePoint(c);
				str.c = str.str.charCodeAt(str.pos++);
				++count;
				continue;
			}
		}
		if(count == 1) {
			var tmp;
			if(str.c == 120 || str.c == 88) {
				str.last2 = str.last;
				str.last = str.b.b;
				tmp = str.last == "0";
			} else {
				tmp = false;
			}
			if(tmp) {
				var c1 = str.c;
				str.b.b += String.fromCodePoint(c1);
				str.c = str.str.charCodeAt(str.pos++);
				hasX = true;
				++count;
				continue;
			} else {
				str.last2 = str.last;
				str.last = str.b.b;
				if(str.last == "0" && str.c != 46) {
					str.b = new StringBuf();
				}
			}
		}
		switch(str.c) {
		case 32:
			while(str.pos < str.length + 1) {
				if(str.c != 32) {
					isNumber = false;
					break;
				}
				str.c = str.str.charCodeAt(str.pos++);
			}
			break _hx_loop1;
		case 46:
			if(dotCount == 0 && !hasX) {
				var c2 = str.c;
				str.b.b += String.fromCodePoint(c2);
			} else {
				isNumber = false;
				break _hx_loop1;
			}
			++dotCount;
			break;
		case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
			var c3 = str.c;
			str.b.b += String.fromCodePoint(c3);
			break;
		case 65:case 66:case 67:case 68:case 69:case 70:case 97:case 98:case 99:case 100:case 101:case 102:
			if(hasX) {
				if(count < 11) {
					var c4 = str.c;
					str.b.b += String.fromCodePoint(c4);
				} else {
					var c5 = str.c;
					str.b.b += String.fromCodePoint(c5);
				}
			} else {
				isNumber = false;
				break _hx_loop1;
			}
			break;
		default:
			isNumber = false;
			break _hx_loop1;
		}
		++count;
		str.c = str.str.charCodeAt(str.pos++);
	}
	if(count == 0) {
		isNumber = false;
	}
	if(isNumber) {
		str.last2 = str.last;
		str.last = str.b.b;
		return str.last;
	} else {
		return "NaN";
	}
}
var parseNumber_StringCodeIterator = function(str_,pos_) {
	if(pos_ == null) {
		pos_ = 0;
	}
	this.str = "";
	this.pos = pos_;
	this.str = str_;
	this.length = this.str.length;
	this.b = new StringBuf();
};
parseNumber_StringCodeIterator.__name__ = true;
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
parseNumber_Main_main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
